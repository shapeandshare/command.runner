[scripts]
audit = [
	"bcr run audit_npm",
	"bcr run audit_pip"
	]
audit_npm = "npm audit --production"
audit_pip = "safety check --full-report"
clean = [
	"rimraf dist src/shapeandshare_command_runner.egg-info **/__pycache__ .coverage coverage.xml htmlcov",
	"bcr run uninstall_wheel"
	]
prebuild = [
	"bcr run clean",
	"pip install -r ./requirements.build.txt",
	"pip install -r ./requirements.test.txt",
	"pip install -r ./requirements.txt"
	]
build = [
	"bcr run prebuild",
	"python -m build"
	]
install = [
	"bcr run build",
	"pip install ./dist/*.whl"
	]
uninstall_wheel = "pip uninstall -y shapeandshare.command.runner"
lint = [
	"bcr run lint_pylint_check",
	"bcr run lint_isort_check",
	"bcr run lint_black_check"
	]
lint_pylint_check = "pylint src"
lint_isort_check = "isort --check --diff ."
lint_black_check = "black --line-length=120 --target-version=py39 --check --diff ."
lint_fix = [
	"bcr run lint_isort_fix",
	"bcr run lint_black_fix"
	]
lint_isort_fix = "isort ."
lint_black_fix = "black --line-length=120 --target-version=py310 ."
prepare = "husky install"
test = [
	"bcr run test_unit",
	"bcr run coverage"
	]
test_unit = "python test/unit/setup.py"
test_integration = [
	"bcr run install",
	"python test/integration/setup.py"
	]
coverage = [
	"bcr run coverage_report",
	"bcr run coverage_report_html",
	"bcr run coverage_report_xml"
	]
coverage_report = "coverage report"
coverage_report_html = "coverage html"
coverage_report_xml = "coverage xml
