# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - uses: actions/setup-node@v3
      with:
        # The Node.js version to configure
        node-version: '14'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        npm ci
        npm run prebuild
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
    - name: Install dependencies
      uses: conda-incubator/setup-miniconda@v2
      with:
        channels: defaults,conda-forge,joshburt
        auto-activate-base: false
        activate-environment: shapeandshare.command.runner
        environment-file: environment.github.yml
    - name: Conda Info
      run: |
        conda info
    - name: Conda Build
      run: |
        conda build conda-recipe
    - name: Publish
      env:
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      run: |
        anaconda --verbose --token $ANACONDA_TOKEN upload --user joshburt /usr/share/miniconda/envs/shapeandshare.command.runner/conda-bld/noarch/shapeandshare.command.runner-*.tar.bz2 --force
